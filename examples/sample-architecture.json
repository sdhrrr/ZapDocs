{
    "metadata": {
        "projectName": "Panorama Digest",
        "description": "A React-based news application with Express backend",
        "version": "1.0.0",
        "generated": "2025-08-18"
    },
    "nodes": [
        {
            "id": "WebApp",
            "data": {
                "label": "Panorama Digest",
                "type": "application"
            },
            "position": {
                "x": 0,
                "y": 0
            }
        },
        {
            "id": "backend\\index.js",
            "data": {
                "label": "index.js",
                "type": "backend"
            },
            "position": {
                "x": 0,
                "y": 0
            }
        },
        {
            "id": "src\\App.js",
            "data": {
                "label": "App.js",
                "type": "component"
            },
            "position": {
                "x": 0,
                "y": 0
            }
        },
        {
            "id": "src\\index.js",
            "data": {
                "label": "index.js",
                "type": "entry"
            },
            "position": {
                "x": 0,
                "y": 0
            }
        },
        {
            "id": "src\\Components\\NavBar.js",
            "data": {
                "label": "NavBar.js",
                "type": "component"
            },
            "position": {
                "x": 0,
                "y": 0
            }
        },
        {
            "id": "src\\Components\\NewsArea.js",
            "data": {
                "label": "NewsArea.js",
                "type": "component"
            },
            "position": {
                "x": 0,
                "y": 0
            }
        },
        {
            "id": "src\\Components\\NewsItem.js",
            "data": {
                "label": "NewsItem.js",
                "type": "component"
            },
            "position": {
                "x": 0,
                "y": 0
            }
        }
    ],
    "details": {
        "backend\\index.js": {
            "summary": "This file sets up an Express server that acts as a proxy to the NewsAPI, allowing clients to fetch top headlines by country and/or category.",
            "signature": "const app = express()\napp.get('/:country?/:category?' , (req , rsp) => { ... })",
            "working": "The server initializes Express, loads environment variables for the port and NewsAPI key, and enables CORS. It defines a single GET endpoint `/:country?/:category?` which dynamically constructs a NewsAPI URL using a `urlBuilder` function based on the provided country and category parameters (defaulting to 'us' country if none provided and appending the API key). It then uses `fetch` to make a request to the constructed NewsAPI URL, handles the response by checking for success, parsing the JSON data, and sending it back to the client, or catches errors and sends a 500 status.",
            "imports": []
        },
        "src\\App.js": {
            "summary": "The App component serves as the main entry point of the React application, setting up the routing structure with a navigation bar and dynamic news display areas.",
            "signature": "function App()",
            "working": "The App component imports necessary React and React Router DOM utilities, then uses BrowserRouter to manage client-side routing; it renders a persistent NavBar at the top, and employs Routes to conditionally render the NewsArea component for the root path (/) and for category-specific paths (/category/:category), effectively displaying news content based on the URL.",
            "imports": [
                "src\\Components\\NavBar.js",
                "src\\Components\\NewsArea.js"
            ]
        },
        "src\\index.js": {
            "summary": "This file serves as the main entry point for a React application, responsible for initializing and rendering the primary App component into the Document Object Model.",
            "signature": "ReactDOM.createRoot(document.getElementById('root')).render(<React.StrictMode><App /></React.StrictMode>);",
            "working": "The script initializes a React root on the HTML element with the ID 'root', then renders the main 'App' component within React's StrictMode into this root, and finally calls a function to report web vitals.",
            "imports": [
                "src\\App.js"
            ]
        },
        "src\\Components\\NavBar.js": {
            "summary": "The NavBar component renders a navigation bar featuring a site title, category links for different news topics, and an external link to a GitHub profile.",
            "signature": "export function NavBar(props)",
            "working": "The component renders a main div that structures the navigation bar into a left section and a right section; the left section displays the site title 'Panorama Digest' and a series of React Router Link components for various news categories, while the right section includes an external anchor tag linking to a GitHub profile.",
            "imports": []
        },
        "src\\Components\\NewsArea.js": {
            "summary": "The NewsArea component fetches and displays news articles, allowing horizontal scrolling with the mouse wheel and showing a loading bar, based on an optional category parameter from the URL.",
            "signature": "export function NewsArea ()",
            "working": "The NewsArea component initializes state for news data, loading progress, and a ref for horizontal scrolling. An `useEffect` hook attaches a 'wheel' event listener to the scroll container, translating vertical mouse wheel scrolls into horizontal movement. A second `useEffect` fetches news articles from a backend API based on whether a category is present in the URL parameters; it updates the loading bar's progress during the fetch and sets the retrieved articles. It includes a helper function to format (truncate) string data. Finally, it conditionally renders a loading message or maps through the fetched news articles (filtering for those with images) to display them using the NewsItem component, while also showing a LoadingBar.",
            "imports": [
                "src\\Components\\NewsItem.js"
            ]
        },
        "src\\Components\\NewsItem.js": {
            "summary": "The NewsItem component is a React functional component designed to display a single news article with an image, title, author, publication time, description, and a link to the full article.",
            "signature": "export function NewsItem(props)",
            "working": "The NewsItem component receives props (imgUrl, title, author, desc, newsUrl, time) and renders a structured card-like div. It uses the imgUrl for a background image, displays the time and author (defaulting to 'Unknown' if author is not provided), shows the news title and description, and includes a 'Find out more' link that opens the provided newsUrl in a new tab.",
            "imports": []
        }
    },
    "hierarchy": {
        "WebApp": [
            "backend\\index.js",
            "src\\index.js"
        ],
        "src\\index.js": [
            "src\\App.js"
        ],
        "src\\App.js": [
            "src\\Components\\NavBar.js",
            "src\\Components\\NewsArea.js"
        ],
        "src\\Components\\NewsArea.js": [
            "src\\Components\\NewsItem.js"
        ]
    },
    "edges": [
        {
            "source": "WebApp",
            "target": "backend\\index.js"
        },
        {
            "source": "WebApp",
            "target": "src\\index.js"
        },
        {
            "source": "src\\index.js",
            "target": "src\\App.js"
        },
        {
            "source": "src\\App.js",
            "target": "src\\Components\\NavBar.js"
        },
        {
            "source": "src\\App.js",
            "target": "src\\Components\\NewsArea.js"
        },
        {
            "source": "src\\Components\\NewsArea.js",
            "target": "src\\Components\\NewsItem.js"
        },
        {
            "source": "src\\Components\\NewsArea.js",
            "target": "backend\\index.js"
        }
    ]
}
