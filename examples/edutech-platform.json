{
    "metadata": {
        "projectName": "EduTech Learning Platform",
        "description": "Full-stack online learning platform with video streaming, assignments, and progress tracking",
        "version": "3.2.1",
        "generated": "2025-08-19",
        "author": "Development Team",
        "repository": "https://github.com/company/edutech-platform"
    },
    "nodes": [
        {
            "id": "platform",
            "data": {
                "label": "EduTech Platform",
                "type": "application"
            }
        },
        {
            "id": "web-client",
            "data": {
                "label": "React Web App",
                "type": "frontend"
            }
        },
        {
            "id": "mobile-app",
            "data": {
                "label": "React Native App",
                "type": "frontend"
            }
        },
        {
            "id": "api-gateway",
            "data": {
                "label": "Kong API Gateway",
                "type": "backend"
            }
        },
        {
            "id": "auth-service",
            "data": {
                "label": "Authentication Service",
                "type": "backend"
            }
        },
        {
            "id": "user-service",
            "data": {
                "label": "User Management",
                "type": "backend"
            }
        },
        {
            "id": "course-service",
            "data": {
                "label": "Course Management",
                "type": "backend"
            }
        },
        {
            "id": "video-service",
            "data": {
                "label": "Video Streaming",
                "type": "backend"
            }
        },
        {
            "id": "assignment-service",
            "data": {
                "label": "Assignment Engine",
                "type": "backend"
            }
        },
        {
            "id": "notification-service",
            "data": {
                "label": "Notification Hub",
                "type": "backend"
            }
        },
        {
            "id": "analytics-service",
            "data": {
                "label": "Learning Analytics",
                "type": "backend"
            }
        },
        {
            "id": "payment-service",
            "data": {
                "label": "Payment Processing",
                "type": "backend"
            }
        },
        {
            "id": "user-db",
            "data": {
                "label": "User Database",
                "type": "database"
            }
        },
        {
            "id": "course-db",
            "data": {
                "label": "Course Database",
                "type": "database"
            }
        },
        {
            "id": "video-storage",
            "data": {
                "label": "Video Storage (S3)",
                "type": "database"
            }
        },
        {
            "id": "analytics-db",
            "data": {
                "label": "Analytics Warehouse",
                "type": "database"
            }
        },
        {
            "id": "redis-cache",
            "data": {
                "label": "Redis Cache",
                "type": "cache"
            }
        },
        {
            "id": "cdn",
            "data": {
                "label": "CloudFront CDN",
                "type": "cache"
            }
        },
        {
            "id": "search-engine",
            "data": {
                "label": "Elasticsearch",
                "type": "backend"
            }
        },
        {
            "id": "message-queue",
            "data": {
                "label": "RabbitMQ",
                "type": "backend"
            }
        }
    ],
    "details": {
        "platform": {
            "summary": "Comprehensive online learning platform serving 50,000+ students with video courses, interactive assignments, and real-time progress tracking",
            "signature": "Microservices Architecture + Event-Driven Design",
            "working": "The platform uses a microservices architecture with separate services for authentication, user management, course delivery, video streaming, assignments, and analytics. All services communicate through an API gateway and use event-driven patterns for real-time updates.",
            "imports": []
        },
        "web-client": {
            "summary": "React-based web application providing the main student and instructor interface for the learning platform",
            "signature": "React 18 + Redux Toolkit + Material-UI",
            "working": "Built with React 18 using functional components and hooks. Uses Redux Toolkit for state management, Material-UI for consistent design, and React Router for navigation. Implements real-time features using WebSocket connections for live classes and chat.",
            "imports": ["api-gateway"]
        },
        "mobile-app": {
            "summary": "Cross-platform mobile application built with React Native for iOS and Android devices",
            "signature": "React Native 0.72 + Expo + NativeBase",
            "working": "Provides offline course viewing, push notifications for assignments, and mobile-optimized video player. Uses Expo for streamlined development and deployment. Implements background sync for course progress and downloads.",
            "imports": ["api-gateway"]
        },
        "api-gateway": {
            "summary": "Kong-based API gateway handling routing, authentication, rate limiting, and API versioning",
            "signature": "Kong Gateway + OAuth 2.0 + Rate Limiting",
            "working": "Central entry point that routes requests to appropriate microservices. Handles JWT token validation, implements rate limiting per user tier, provides API versioning, and logs all requests for analytics. Uses plugins for CORS, security headers, and request transformation.",
            "imports": ["auth-service", "user-service", "course-service", "video-service", "assignment-service", "notification-service", "analytics-service", "payment-service"]
        },
        "auth-service": {
            "summary": "Handles user authentication, authorization, and session management with multi-factor authentication support",
            "signature": "Node.js + Passport.js + JWT + OAuth",
            "working": "Manages user login/logout, password reset, MFA using TOTP, social login (Google, Microsoft), and JWT token generation. Implements role-based access control (Student, Instructor, Admin) and integrates with external identity providers for enterprise customers.",
            "imports": ["user-db", "redis-cache", "notification-service"]
        },
        "user-service": {
            "summary": "Manages user profiles, enrollment, progress tracking, and learning paths",
            "signature": "Node.js + Express + Mongoose + Bull Queue",
            "working": "Handles user profile management, course enrollments, learning progress tracking, achievement badges, and personalized learning path recommendations. Uses background jobs for progress calculations and sends events to analytics service.",
            "imports": ["user-db", "redis-cache", "message-queue", "analytics-service"]
        },
        "course-service": {
            "summary": "Manages course content, curriculum, lessons, quizzes, and instructor tools",
            "signature": "Node.js + Express + MongoDB + GridFS",
            "working": "Handles course creation, lesson management, quiz engine, course search, and instructor dashboard. Supports multiple content types (video, text, PDF, interactive elements). Implements course versioning and draft/published states.",
            "imports": ["course-db", "search-engine", "video-service", "redis-cache"]
        },
        "video-service": {
            "summary": "Handles video upload, processing, streaming, and adaptive bitrate delivery",
            "signature": "Node.js + FFmpeg + AWS MediaConvert + HLS",
            "working": "Manages video upload to S3, triggers AWS MediaConvert for transcoding to multiple resolutions, generates HLS streams for adaptive playback, and provides video analytics. Implements video watermarking and DRM for premium content.",
            "imports": ["video-storage", "cdn", "analytics-service"]
        },
        "assignment-service": {
            "summary": "Manages assignments, submissions, auto-grading, and plagiarism detection",
            "signature": "Python + FastAPI + Celery + ML Models",
            "working": "Handles assignment creation, student submissions, automated grading using ML models, plagiarism detection, and peer review workflows. Supports multiple question types (MCQ, coding, essay) and provides detailed feedback.",
            "imports": ["course-db", "user-db", "message-queue", "analytics-service"]
        },
        "notification-service": {
            "summary": "Handles email, SMS, push notifications, and in-app messaging with delivery tracking",
            "signature": "Node.js + SendGrid + Firebase + WebSocket",
            "working": "Manages all outbound communications including course updates, assignment deadlines, achievement notifications, and marketing campaigns. Uses templates for consistent messaging and tracks delivery rates. Implements real-time in-app notifications.",
            "imports": ["message-queue", "redis-cache"]
        },
        "analytics-service": {
            "summary": "Collects, processes, and analyzes learning data to provide insights and recommendations",
            "signature": "Python + Apache Kafka + Spark + TensorFlow",
            "working": "Processes learning events in real-time, generates learning analytics reports, provides course recommendations, identifies at-risk students, and creates instructor dashboards. Uses machine learning for personalization and predictive analytics.",
            "imports": ["analytics-db", "message-queue", "redis-cache"]
        },
        "payment-service": {
            "summary": "Handles course purchases, subscriptions, refunds, and revenue tracking",
            "signature": "Node.js + Stripe + PayPal + Webhook Processing",
            "working": "Manages payment processing for course purchases and subscriptions, handles refunds and chargebacks, implements revenue sharing for instructors, and provides financial reporting. Supports multiple currencies and payment methods.",
            "imports": ["user-db", "course-db", "notification-service"]
        },
        "user-db": {
            "summary": "PostgreSQL database storing user accounts, profiles, enrollments, and progress data",
            "signature": "PostgreSQL 15 + Read Replicas + Connection Pooling",
            "working": "Stores user information with proper indexing for performance. Uses read replicas for analytics queries. Implements data encryption for PII and GDPR compliance. Uses connection pooling and query optimization for high performance.",
            "imports": []
        },
        "course-db": {
            "summary": "MongoDB database storing course content, lessons, quizzes, and metadata",
            "signature": "MongoDB 7.0 + Sharding + GridFS",
            "working": "Document-based storage optimized for course content with flexible schema. Uses GridFS for storing large files. Implements proper indexing for search performance and uses sharding for horizontal scaling.",
            "imports": []
        },
        "video-storage": {
            "summary": "AWS S3 bucket storing raw and processed video files with lifecycle management",
            "signature": "AWS S3 + CloudFront + Lifecycle Policies",
            "working": "Stores video files with automatic lifecycle management to optimize costs. Uses S3 Transfer Acceleration for faster uploads. Implements versioning and cross-region replication for disaster recovery.",
            "imports": []
        },
        "analytics-db": {
            "summary": "Data warehouse storing aggregated learning analytics and reporting data",
            "signature": "Amazon Redshift + ETL Pipelines + Materialized Views",
            "working": "Columnar storage optimized for analytical queries. Uses ETL pipelines to aggregate data from operational databases. Implements materialized views for fast dashboard queries and supports real-time streaming inserts.",
            "imports": []
        },
        "redis-cache": {
            "summary": "In-memory cache for session data, frequently accessed content, and real-time features",
            "signature": "Redis 7.2 + Clustering + Pub/Sub",
            "working": "Provides high-performance caching for user sessions, course metadata, and leaderboards. Implements Redis Pub/Sub for real-time features like live chat and notifications. Uses clustering for high availability and horizontal scaling.",
            "imports": []
        },
        "cdn": {
            "summary": "CloudFront CDN for global content delivery and video streaming optimization",
            "signature": "AWS CloudFront + Origin Shield + Edge Locations",
            "working": "Delivers video content and static assets from edge locations worldwide. Uses Origin Shield to reduce origin load. Implements custom cache behaviors for different content types and provides detailed analytics.",
            "imports": []
        },
        "search-engine": {
            "summary": "Elasticsearch cluster providing full-text search for courses, lessons, and content",
            "signature": "Elasticsearch 8.0 + Kibana + Custom Analyzers",
            "working": "Provides fast full-text search across all course content. Uses custom analyzers for educational content, implements auto-complete suggestions, and provides search analytics. Supports faceted search and personalized results.",
            "imports": []
        },
        "message-queue": {
            "summary": "RabbitMQ message broker handling asynchronous communication between services",
            "signature": "RabbitMQ 3.12 + Clustering + Dead Letter Queues",
            "working": "Handles asynchronous communication between microservices using publish/subscribe patterns. Implements dead letter queues for failed message handling, message persistence, and clustering for high availability.",
            "imports": []
        }
    },
    "hierarchy": {
        "platform": [
            "web-client",
            "mobile-app",
            "api-gateway"
        ],
        "api-gateway": [
            "auth-service",
            "user-service",
            "course-service",
            "video-service",
            "assignment-service",
            "notification-service",
            "analytics-service",
            "payment-service"
        ],
        "auth-service": [
            "user-db",
            "redis-cache"
        ],
        "user-service": [
            "user-db",
            "redis-cache",
            "message-queue"
        ],
        "course-service": [
            "course-db",
            "search-engine",
            "redis-cache"
        ],
        "video-service": [
            "video-storage",
            "cdn"
        ],
        "assignment-service": [
            "course-db",
            "user-db",
            "message-queue"
        ],
        "notification-service": [
            "message-queue",
            "redis-cache"
        ],
        "analytics-service": [
            "analytics-db",
            "message-queue",
            "redis-cache"
        ],
        "payment-service": [
            "user-db",
            "course-db"
        ]
    },
    "edges": [
        {
            "source": "platform",
            "target": "web-client"
        },
        {
            "source": "platform",
            "target": "mobile-app"
        },
        {
            "source": "platform",
            "target": "api-gateway"
        },
        {
            "source": "web-client",
            "target": "api-gateway"
        },
        {
            "source": "mobile-app",
            "target": "api-gateway"
        },
        {
            "source": "api-gateway",
            "target": "auth-service"
        },
        {
            "source": "api-gateway",
            "target": "user-service"
        },
        {
            "source": "api-gateway",
            "target": "course-service"
        },
        {
            "source": "api-gateway",
            "target": "video-service"
        },
        {
            "source": "api-gateway",
            "target": "assignment-service"
        },
        {
            "source": "api-gateway",
            "target": "notification-service"
        },
        {
            "source": "api-gateway",
            "target": "analytics-service"
        },
        {
            "source": "api-gateway",
            "target": "payment-service"
        },
        {
            "source": "auth-service",
            "target": "user-db"
        },
        {
            "source": "auth-service",
            "target": "redis-cache"
        },
        {
            "source": "auth-service",
            "target": "notification-service"
        },
        {
            "source": "user-service",
            "target": "user-db"
        },
        {
            "source": "user-service",
            "target": "redis-cache"
        },
        {
            "source": "user-service",
            "target": "message-queue"
        },
        {
            "source": "user-service",
            "target": "analytics-service"
        },
        {
            "source": "course-service",
            "target": "course-db"
        },
        {
            "source": "course-service",
            "target": "search-engine"
        },
        {
            "source": "course-service",
            "target": "video-service"
        },
        {
            "source": "course-service",
            "target": "redis-cache"
        },
        {
            "source": "video-service",
            "target": "video-storage"
        },
        {
            "source": "video-service",
            "target": "cdn"
        },
        {
            "source": "video-service",
            "target": "analytics-service"
        },
        {
            "source": "assignment-service",
            "target": "course-db"
        },
        {
            "source": "assignment-service",
            "target": "user-db"
        },
        {
            "source": "assignment-service",
            "target": "message-queue"
        },
        {
            "source": "assignment-service",
            "target": "analytics-service"
        },
        {
            "source": "notification-service",
            "target": "message-queue"
        },
        {
            "source": "notification-service",
            "target": "redis-cache"
        },
        {
            "source": "analytics-service",
            "target": "analytics-db"
        },
        {
            "source": "analytics-service",
            "target": "message-queue"
        },
        {
            "source": "analytics-service",
            "target": "redis-cache"
        },
        {
            "source": "payment-service",
            "target": "user-db"
        },
        {
            "source": "payment-service",
            "target": "course-db"
        },
        {
            "source": "payment-service",
            "target": "notification-service"
        }
    ]
}
